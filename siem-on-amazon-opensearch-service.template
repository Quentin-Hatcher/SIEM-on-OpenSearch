{
  "Description": "SIEM on Amazon OpenSearch Service v2.8.0c",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Initial Deployment Parameters"
          },
          "Parameters": [
            "AllowedSourceIpAddresses"
          ]
        },
        {
          "Label": {
            "default": "Basic Configuration"
          },
          "Parameters": [
            "SnsEmail",
            "ReservedConcurrency"
          ]
        },
        {
          "Label": {
            "default": "Log Enrichment"
          },
          "Parameters": [
            "GeoLite2LicenseKey",
            "OtxApiKey",
            "EnableTor",
            "EnableAbuseCh",
            "IocDownloadInterval"
          ]
        }
      ]
    }
  },
  "Mappings": {
    "RegionMap": {
      "af-south-1": {
        "ElbV2AccountId": "098369216593",
        "LambdaArch": "x86_64"
      },
      "ap-east-1": {
        "ElbV2AccountId": "754344448648",
        "LambdaArch": "x86_64"
      },
      "ap-northeast-1": {
        "ElbV2AccountId": "582318560864",
        "LambdaArch": "arm64"
      },
      "ap-northeast-2": {
        "ElbV2AccountId": "600734575887",
        "LambdaArch": "x86_64"
      },
      "ap-northeast-3": {
        "ElbV2AccountId": "383597477331",
        "LambdaArch": "x86_64"
      },
      "ap-south-1": {
        "ElbV2AccountId": "718504428378",
        "LambdaArch": "arm64"
      },
      "ap-southeast-1": {
        "ElbV2AccountId": "114774131450",
        "LambdaArch": "arm64"
      },
      "ap-southeast-2": {
        "ElbV2AccountId": "783225319266",
        "LambdaArch": "arm64"
      },
      "ap-southeast-3": {
        "ElbV2AccountId": "589379963580",
        "LambdaArch": "x86_64"
      },
      "ca-central-1": {
        "ElbV2AccountId": "985666609251",
        "LambdaArch": "x86_64"
      },
      "cn-north-1": {
        "ElbV2AccountId": "638102146993",
        "LambdaArch": "x86_64"
      },
      "cn-northwest-1": {
        "ElbV2AccountId": "037604701340",
        "LambdaArch": "x86_64"
      },
      "eu-central-1": {
        "ElbV2AccountId": "054676820928",
        "LambdaArch": "arm64"
      },
      "eu-north-1": {
        "ElbV2AccountId": "897822967062",
        "LambdaArch": "x86_64"
      },
      "eu-south-1": {
        "ElbV2AccountId": "635631232127",
        "LambdaArch": "x86_64"
      },
      "eu-west-1": {
        "ElbV2AccountId": "156460612806",
        "LambdaArch": "arm64"
      },
      "eu-west-2": {
        "ElbV2AccountId": "652711504416",
        "LambdaArch": "arm64"
      },
      "eu-west-3": {
        "ElbV2AccountId": "009996457667",
        "LambdaArch": "x86_64"
      },
      "me-south-1": {
        "ElbV2AccountId": "076674570225",
        "LambdaArch": "x86_64"
      },
      "sa-east-1": {
        "ElbV2AccountId": "507241528517",
        "LambdaArch": "x86_64"
      },
      "us-east-1": {
        "ElbV2AccountId": "127311923021",
        "LambdaArch": "arm64"
      },
      "us-east-2": {
        "ElbV2AccountId": "033677994240",
        "LambdaArch": "arm64"
      },
      "us-gov-east-1": {
        "ElbV2AccountId": "190560391635",
        "LambdaArch": "x86_64"
      },
      "us-gov-west-1": {
        "ElbV2AccountId": "048591011584",
        "LambdaArch": "x86_64"
      },
      "us-west-1": {
        "ElbV2AccountId": "027434742980",
        "LambdaArch": "x86_64"
      },
      "us-west-2": {
        "ElbV2AccountId": "797873946194",
        "LambdaArch": "arm64"
      }
    }
  },
  "Parameters": {
    "AllowedSourceIpAddresses": {
      "Type": "String",
      "Default": "10.0.0.0/8 172.16.0.0/12 192.168.0.0/16",
      "AllowedPattern": "^[0-9./\\s]*",
      "Description": "Space-delimited list of CIDR blocks. This parameter applies only during the initial deployment"
    },
    "SnsEmail": {
      "Type": "String",
      "Default": "user+sns@example.com",
      "AllowedPattern": "^[0-9a-zA-Z@_\\-\\+\\.]*",
      "Description": "Input your email as SNS topic, where Amazon OpenSearch Service will send alerts to"
    },
    "GeoLite2LicenseKey": {
      "Type": "String",
      "Default": "xxxxxxxxxxxxxxxx",
      "AllowedPattern": "^([0-9a-zA-Z]{16}|)$",
      "Description": "If you wolud like to enrich geoip locaiton such as IP address's country, get a license key form MaxMind and input the key",
      "MaxLength": 16
    },
    "ReservedConcurrency": {
      "Type": "Number",
      "Default": 10,
      "Description": "Input lambda reserved concurrency for es-loader. Increase this value if there are steady logs delay despite withou errors"
    },
    "OtxApiKey": {
      "Type": "String",
      "Default": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "AllowedPattern": "^([0-9a-f,x]{64}|)$",
      "Description": "(experimental) If you wolud like to download IoC from AlienVault OTX, please enter OTX API Key. See details: https://otx.alienvault.com",
      "MaxLength": 64
    },
    "EnableTor": {
      "Type": "String",
      "Default": "false",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Description": "(experimental) Would you like to download TOR IoC? See details: https://check.torproject.org/api/bulk"
    },
    "EnableAbuseCh": {
      "Type": "String",
      "Default": "false",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Description": "(experimental) Would you like to download IoC from abuse.ch? See details: https://feodotracker.abuse.ch/blocklist/"
    },
    "IocDownloadInterval": {
      "Type": "Number",
      "Default": 720,
      "Description": "(experimental) Specify interval in minute to download IoC, default is  720 miniutes ( = 12 hours )",
      "MaxValue": 1440,
      "MinValue": 30
    }
  },
  "Conditions": {
    "IsVpc": {
      "Fn::Equals": [
        false,
        true
      ]
    }
  },
  "Resources": {
    "KmsAesSiemLog44B26597": {
      "Type": "AWS::KMS::Key",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
                "kms:GenerateDataKey",
                "kms:TagResource",
                "kms:UntagResource"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": "*"
            },
            {
              "Action": "kms:GenerateDataKey",
              "Effect": "Allow",
              "Principal": {
                "Service": "guardduty.amazonaws.com"
              },
              "Resource": "*",
              "Sid": "Allow GuardDuty to use the key"
            },
            {
              "Action": [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
                "kms:DescribeKey"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "delivery.logs.amazonaws.com"
              },
              "Resource": "*",
              "Sid": "Allow VPC Flow Logs to use the key"
            },
            {
              "Action": [
                "kms:DescribeKey",
                "kms:ReEncryptFrom"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": "*",
              "Sid": "Allow principals in the account to decrypt log files"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:GenerateDataKey*",
                "kms:ReEncrypt*"
              ],
              "Condition": {
                "ForAnyValue:StringEquals": {
                  "aws:CalledVia": "athena.amazonaws.com"
                }
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": "*",
              "Sid": "Allow Athena to query s3 objects with this key"
            },
            {
              "Action": "kms:DescribeKey",
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudtrail.amazonaws.com"
              },
              "Resource": "*",
              "Sid": "Allow CloudTrail to describe key"
            },
            {
              "Action": "kms:GenerateDataKey*",
              "Condition": {
                "StringLike": {
                  "kms:EncryptionContext:aws:cloudtrail:arn": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:cloudtrail:*:",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":trail/*"
                        ]
                      ]
                    }
                  ]
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudtrail.amazonaws.com"
              },
              "Resource": "*",
              "Sid": "Allow CloudTrail to encrypt logs"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:GenerateDataKey"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "AesSiemSnsRole64262F46",
                    "Arn"
                  ]
                }
              },
              "Resource": "*"
            },
            {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "LambdaEsLoaderServiceRoleFFD43869",
                    "Arn"
                  ]
                }
              },
              "Resource": "*"
            },
            {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "AesSiemEsLoaderEC2RoleFE3F9F00",
                    "Arn"
                  ]
                }
              },
              "Resource": "*"
            },
            {
              "Action": [
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "LambdaMetricsExporterServiceRoleDDE0BD95",
                    "Arn"
                  ]
                }
              },
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "CMK for SIEM solution"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "KmsAesSiemLogAliasE0A4C571": {
      "Type": "AWS::KMS::Alias",
      "Properties": {
        "AliasName": "alias/aes-siem-key",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "KmsAesSiemLog44B26597",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "S3BucketForGeoip04B5F171": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "BucketName": {
          "Fn::Join": [
            "",
            [
              "aes-siem-",
              {
                "Ref": "AWS::AccountId"
              },
              "-geo"
            ]
          ]
        },
        "LifecycleConfiguration": {
          "Rules": [
            {
              "ExpirationInDays": 7,
              "ExpiredObjectDeleteMarker": false,
              "Id": "delete-ioc-temp-files",
              "Prefix": "IOC/tmp/",
              "Status": "Enabled"
            }
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "S3BucketForGeoipPolicy854C0CB1": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "S3BucketForGeoip04B5F171"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "S3BucketForGeoip04B5F171",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "S3BucketForGeoip04B5F171",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "S3BucketForLog20898FE4": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "BucketName": {
          "Fn::Join": [
            "",
            [
              "aes-siem-",
              {
                "Ref": "AWS::AccountId"
              },
              "-log"
            ]
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        },
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "S3BucketForLogNotificationsAEE88E1E": {
      "Type": "Custom::S3BucketNotifications",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "S3BucketForLog20898FE4"
        },
        "NotificationConfiguration": {
          "LambdaFunctionConfigurations": [
            {
              "Events": [
                "s3:ObjectCreated:*"
              ],
              "LambdaFunctionArn": {
                "Fn::GetAtt": [
                  "LambdaEsLoader4B1E2DD9",
                  "Arn"
                ]
              }
            }
          ]
        },
        "Managed": true
      },
      "DependsOn": [
        "S3BucketForLogAllowBucketNotificationsToaessiemLambdaEsLoaderEBF3B9FB7766EAA3"
      ]
    },
    "S3BucketForLogAllowBucketNotificationsToaessiemLambdaEsLoaderEBF3B9FB7766EAA3": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaEsLoader4B1E2DD9",
            "Arn"
          ]
        },
        "Principal": "s3.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        },
        "SourceArn": {
          "Fn::GetAtt": [
            "S3BucketForLog20898FE4",
            "Arn"
          ]
        }
      }
    },
    "S3BucketForLogPolicy546D5712": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "S3BucketForLog20898FE4"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Fn::FindInMap": [
                          "RegionMap",
                          {
                            "Ref": "AWS::Region"
                          },
                          "ElbV2AccountId"
                        ]
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "S3BucketForLog20898FE4",
                        "Arn"
                      ]
                    },
                    "/AWSLogs/",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    "/*"
                  ]
                ]
              },
              "Sid": "ELB Policy"
            },
            {
              "Action": [
                "s3:GetBucketAcl",
                "s3:ListBucket"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "delivery.logs.amazonaws.com"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "S3BucketForLog20898FE4",
                  "Arn"
                ]
              },
              "Sid": "AWSLogDeliveryAclCheck For ALB NLB R53Resolver Flowlogs"
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "StringEquals": {
                  "s3:x-amz-acl": "bucket-owner-full-control"
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "delivery.logs.amazonaws.com"
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "S3BucketForLog20898FE4",
                        "Arn"
                      ]
                    },
                    "/AWSLogs/",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    "/*"
                  ]
                ]
              },
              "Sid": "AWSLogDeliveryWrite For ALB NLB R53Resolver Flowlogs"
            },
            {
              "Action": "s3:GetBucketAcl",
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudtrail.amazonaws.com"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "S3BucketForLog20898FE4",
                  "Arn"
                ]
              },
              "Sid": "AWSLogDeliveryAclCheck For Cloudtrail"
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "StringEquals": {
                  "s3:x-amz-acl": "bucket-owner-full-control"
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudtrail.amazonaws.com"
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "S3BucketForLog20898FE4",
                        "Arn"
                      ]
                    },
                    "/AWSLogs/",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    "/*"
                  ]
                ]
              },
              "Sid": "AWSLogDeliveryWrite For CloudTrail"
            },
            {
              "Action": "s3:GetBucketLocation",
              "Effect": "Allow",
              "Principal": {
                "Service": "guardduty.amazonaws.com"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "S3BucketForLog20898FE4",
                  "Arn"
                ]
              },
              "Sid": "Allow GuardDuty to use the getBucketLocation operation"
            },
            {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Principal": {
                "Service": "guardduty.amazonaws.com"
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "S3BucketForLog20898FE4",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              },
              "Sid": "Allow GuardDuty to upload objects to the bucket"
            },
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "S3BucketForLog20898FE4",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              },
              "Sid": "Deny non-HTTPS access"
            },
            {
              "Action": [
                "s3:GetBucketAcl",
                "s3:ListBucket"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "config.amazonaws.com"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "S3BucketForLog20898FE4",
                  "Arn"
                ]
              },
              "Sid": "AWSConfig BucketPermissionsCheck and BucketExistenceCheck"
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "StringEquals": {
                  "s3:x-amz-acl": "bucket-owner-full-control"
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "config.amazonaws.com"
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "S3BucketForLog20898FE4",
                        "Arn"
                      ]
                    },
                    "/AWSLogs/",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    "/Config/*"
                  ]
                ]
              },
              "Sid": "AWSConfigBucketDelivery"
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "S3BucketForSnapshot40E67D36": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "BucketName": {
          "Fn::Join": [
            "",
            [
              "aes-siem-",
              {
                "Ref": "AWS::AccountId"
              },
              "-snapshot"
            ]
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "S3BucketForSnapshotPolicy3DEBD2C0": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "S3BucketForSnapshot40E67D36"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "S3BucketForSnapshot40E67D36",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "S3BucketForSnapshot40E67D36",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:PutObject",
                "s3:GetObject",
                "s3:DeleteObject"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "AesSiemSnapshotRoleF313ED39",
                    "Arn"
                  ]
                }
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "S3BucketForSnapshot40E67D36",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              },
              "Sid": "Allow ES to store snapshot"
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "AesSiemSnapshotRoleF313ED39": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "opensearchservice.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListBucket",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "S3BucketForSnapshot40E67D36",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": [
                    "s3:GetObject",
                    "s3:PutObject",
                    "s3:DeleteObject"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "S3BucketForSnapshot40E67D36",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "s3access"
          }
        ],
        "RoleName": "aes-siem-snapshot-role"
      }
    },
    "AesSiemDeployRoleForLambda654D64F2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonOpenSearchServiceFullAccess"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "iam:PassRole",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "AesSiemSnapshotRoleF313ED39",
                      "Arn"
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "assume_snapshotrole"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListBucket",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "S3BucketForSnapshot40E67D36",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": [
                    "s3:GetObject",
                    "s3:PutObject",
                    "s3:DeleteObject"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "S3BucketForSnapshot40E67D36",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "s3access"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:PutResourcePolicy",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":*"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "logs:PutRetentionPolicy"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/aes/domains/aes-siem/*"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/OpenSearchService/domains/aes-siem/*"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/aes-siem-*"
                        ]
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "cwl_loggroup"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "lambda:AddPermission",
                    "lambda:RemovePermission",
                    "events:ListRules",
                    "events:PutRule",
                    "events:DeleteRule",
                    "events:PutTargets",
                    "events:RemoveTargets"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "crhelper"
          }
        ],
        "RoleName": "aes-siem-deploy-role-for-lambda"
      }
    },
    "AesSiemSnsRole64262F46": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "opensearchservice.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "RoleName": "aes-siem-sns-role"
      }
    },
    "AesSiemSnsRoleDefaultPolicy7B8095B5": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kms:Decrypt",
                "kms:GenerateDataKey"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KmsAesSiemLog44B26597",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "SnsTopic2C1570A4"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "AesSiemSnsRoleDefaultPolicy7B8095B5",
        "Roles": [
          {
            "Ref": "AesSiemSnsRole64262F46"
          }
        ]
      }
    },
    "AesSiemEsLoaderEC2RoleFE3F9F00": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "RoleName": "aes-siem-es-loader-for-ec2"
      }
    },
    "AesSiemEsLoaderEC2RoleDefaultPolicyAF44001A": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sqs:GetQueue*",
                "sqs:ListQueues*",
                "sqs:ReceiveMessage*",
                "sqs:DeleteMessage*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "AesSiemDlq1CD8439D",
                  "Arn"
                ]
              }
            },
            {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KmsAesSiemLog44B26597",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "S3BucketForGeoip04B5F171",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "S3BucketForGeoip04B5F171",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "S3BucketForLog20898FE4",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "S3BucketForLog20898FE4",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "AesSiemEsLoaderEC2RoleDefaultPolicyAF44001A",
        "Roles": [
          {
            "Ref": "AesSiemEsLoaderEC2RoleFE3F9F00"
          }
        ]
      }
    },
    "AesSiemEsLoaderEC2InstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "AesSiemEsLoaderEC2RoleFE3F9F00"
          }
        ],
        "InstanceProfileName": {
          "Ref": "AesSiemEsLoaderEC2RoleFE3F9F00"
        }
      }
    },
    "AesSiemDlq1CD8439D": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsDataKeyReusePeriodSeconds": 86400,
        "KmsMasterKeyId": "alias/aws/sqs",
        "MessageRetentionPeriod": 1209600,
        "QueueName": "aes-siem-dlq"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "AesSiemSqsSplitLogs0191F431": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsDataKeyReusePeriodSeconds": 86400,
        "KmsMasterKeyId": "alias/aws/sqs",
        "MessageRetentionPeriod": 1209600,
        "QueueName": "aes-siem-sqs-splitted-logs",
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "AesSiemDlq1CD8439D",
              "Arn"
            ]
          },
          "maxReceiveCount": 2
        },
        "VisibilityTimeout": 600
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "LambdaEsLoaderServiceRoleFFD43869": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "LambdaEsLoaderServiceRoleDefaultPolicyB7A386B3": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "AesSiemDlq1CD8439D",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:ReceiveMessage",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "AesSiemDlq1CD8439D",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:ReceiveMessage",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "AesSiemSqsSplitLogs0191F431",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "AesSiemSqsSplitLogs0191F431",
                  "Arn"
                ]
              }
            },
            {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KmsAesSiemLog44B26597",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "S3BucketForGeoip04B5F171",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "S3BucketForGeoip04B5F171",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "S3BucketForLog20898FE4",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "S3BucketForLog20898FE4",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "LambdaEsLoaderServiceRoleDefaultPolicyB7A386B3",
        "Roles": [
          {
            "Ref": "LambdaEsLoaderServiceRoleFFD43869"
          }
        ]
      }
    },
    "LambdaEsLoader4B1E2DD9": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "aes-siem-us-east-1",
          "S3Key": "siem-on-amazon-opensearch-service/v2.8.0c/assets/es_loader.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "LambdaEsLoaderServiceRoleFFD43869",
            "Arn"
          ]
        },
        "Architectures": [
          {
            "Fn::FindInMap": [
              "RegionMap",
              {
                "Ref": "AWS::Region"
              },
              "LambdaArch"
            ]
          }
        ],
        "DeadLetterConfig": {
          "TargetArn": {
            "Fn::GetAtt": [
              "AesSiemDlq1CD8439D",
              "Arn"
            ]
          }
        },
        "Description": "SIEM on Amazon OpenSearch Service v2.8.0c / es-loader",
        "Environment": {
          "Variables": {
            "ES_ENDPOINT": {
              "Fn::GetAtt": [
                "AesSiemDomainDeployedR2",
                "es_endpoint"
              ]
            },
            "GEOIP_BUCKET": {
              "Fn::Join": [
                "",
                [
                  "aes-siem-",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  "-geo"
                ]
              ]
            },
            "LOG_LEVEL": "info",
            "POWERTOOLS_LOGGER_LOG_EVENT": "false",
            "POWERTOOLS_METRICS_NAMESPACE": "SIEM",
            "POWERTOOLS_SERVICE_NAME": "es-loader",
            "SQS_SPLITTED_LOGS_URL": {
              "Ref": "AesSiemSqsSplitLogs0191F431"
            }
          }
        },
        "FunctionName": "aes-siem-es-loader",
        "Handler": "index.lambda_handler",
        "MemorySize": 2048,
        "ReservedConcurrentExecutions": {
          "Ref": "ReservedConcurrency"
        },
        "Runtime": "python3.8",
        "Timeout": 600
      },
      "DependsOn": [
        "LambdaEsLoaderServiceRoleDefaultPolicyB7A386B3",
        "LambdaEsLoaderServiceRoleFFD43869"
      ]
    },
    "LambdaEsLoaderCurrentVersion9DFE6955ebc3bdc1e6d28bde599d36c09bb0eb10": {
      "Type": "AWS::Lambda::Version",
      "Properties": {
        "FunctionName": {
          "Ref": "LambdaEsLoader4B1E2DD9"
        },
        "Description": "2.8.0c"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "LambdaEsLoaderSqsEventSourceaessiemAesSiemSqsSplitLogs506AFFA6A7D8B2E9": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "FunctionName": {
          "Ref": "LambdaEsLoader4B1E2DD9"
        },
        "BatchSize": 1,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "AesSiemSqsSplitLogs0191F431",
            "Arn"
          ]
        }
      }
    },
    "LambdaAddPandasLayerRoleDCA80237": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "lambda:UpdateFunctionConfiguration",
                    "lambda:GetFunction"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "LambdaEsLoader4B1E2DD9",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "lambda:PublishLayerVersion",
                  "Effect": "Allow",
                  "Resource": "arn:aws:lambda:*:*:layer:AWSDataWrangler-Python38*"
                },
                {
                  "Action": [
                    "lambda:ListLayers",
                    "lambda:GetLayerVersion"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "s3:Get*",
                    "s3:List*"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "add-pandas-layer-policy"
          }
        ]
      }
    },
    "LambdaAddPandasLayerRoleDefaultPolicy6A268C17": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "S3BucketForGeoip04B5F171",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "S3BucketForGeoip04B5F171",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "LambdaAddPandasLayerRoleDefaultPolicy6A268C17",
        "Roles": [
          {
            "Ref": "LambdaAddPandasLayerRoleDCA80237"
          }
        ]
      }
    },
    "LambdaAddPandasLayer8F3F6957": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "aes-siem-us-east-1",
          "S3Key": "siem-on-amazon-opensearch-service/v2.8.0c/assets/add_pandas_layer.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "LambdaAddPandasLayerRoleDCA80237",
            "Arn"
          ]
        },
        "Architectures": [
          {
            "Fn::FindInMap": [
              "RegionMap",
              {
                "Ref": "AWS::Region"
              },
              "LambdaArch"
            ]
          }
        ],
        "Description": "SIEM on Amazon OpenSearch Service v2.8.0c / add-pandas-layer",
        "Environment": {
          "Variables": {
            "GEOIP_BUCKET": {
              "Fn::Join": [
                "",
                [
                  "aes-siem-",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  "-geo"
                ]
              ]
            }
          }
        },
        "FunctionName": "aes-siem-add-pandas-layer",
        "Handler": "lambda_function.lambda_handler",
        "MemorySize": 128,
        "Runtime": "python3.9",
        "Timeout": 300
      },
      "DependsOn": [
        "LambdaAddPandasLayerRoleDefaultPolicy6A268C17",
        "LambdaAddPandasLayerRoleDCA80237"
      ]
    },
    "LambdaAddPandasLayerCurrentVersion52D075437d8e4cbb67c52ea32459228246a7d757": {
      "Type": "AWS::Lambda::Version",
      "Properties": {
        "FunctionName": {
          "Ref": "LambdaAddPandasLayer8F3F6957"
        },
        "Description": "2.8.0c"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "ExecLambdaAddPandasLayer": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LambdaAddPandasLayer8F3F6957",
            "Arn"
          ]
        },
        "ConfigVersion": "2.8.0c"
      },
      "DependsOn": [
        "LambdaAddPandasLayerRoleDefaultPolicy6A268C17",
        "LambdaAddPandasLayerRoleDCA80237",
        "LambdaEsLoaderCurrentVersion9DFE6955ebc3bdc1e6d28bde599d36c09bb0eb10",
        "LambdaEsLoader4B1E2DD9",
        "LambdaEsLoaderServiceRoleDefaultPolicyB7A386B3",
        "LambdaEsLoaderServiceRoleFFD43869",
        "LambdaEsLoaderSqsEventSourceaessiemAesSiemSqsSplitLogs506AFFA6A7D8B2E9"
      ]
    },
    "LambdaEsLoaderStopperServiceRole83AABC1A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "LambdaEsLoaderStopperServiceRoleDefaultPolicyCC98CC06": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "SnsTopic2C1570A4"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "LambdaEsLoaderStopperServiceRoleDefaultPolicyCC98CC06",
        "Roles": [
          {
            "Ref": "LambdaEsLoaderStopperServiceRole83AABC1A"
          }
        ]
      }
    },
    "LambdaEsLoaderStopper35C1D57B": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "aes-siem-us-east-1",
          "S3Key": "siem-on-amazon-opensearch-service/v2.8.0c/assets/es_loader_stopper.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "LambdaEsLoaderStopperServiceRole83AABC1A",
            "Arn"
          ]
        },
        "Architectures": [
          {
            "Fn::FindInMap": [
              "RegionMap",
              {
                "Ref": "AWS::Region"
              },
              "LambdaArch"
            ]
          }
        ],
        "Description": "SIEM on Amazon OpenSearch Service v2.8.0c / es-loader-stopper",
        "Environment": {
          "Variables": {
            "AES_SIEM_ALERT_TOPIC_ARN": {
              "Ref": "SnsTopic2C1570A4"
            },
            "ES_LOADER_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "LambdaEsLoader4B1E2DD9",
                "Arn"
              ]
            },
            "ES_LOADER_RESERVED_CONCURRENCY": {
              "Ref": "ReservedConcurrency"
            }
          }
        },
        "FunctionName": "aes-siem-es-loader-stopper",
        "Handler": "index.lambda_handler",
        "MemorySize": 128,
        "Runtime": "python3.8",
        "Timeout": 300
      },
      "DependsOn": [
        "LambdaEsLoaderStopperServiceRoleDefaultPolicyCC98CC06",
        "LambdaEsLoaderStopperServiceRole83AABC1A"
      ]
    },
    "LambdaEsLoaderStopperCurrentVersion312AA85004422bd7d2ed775e4e5f3ba94094ebf4": {
      "Type": "AWS::Lambda::Version",
      "Properties": {
        "FunctionName": {
          "Ref": "LambdaEsLoaderStopper35C1D57B"
        },
        "Description": "2.8.0c"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "LambdaGeoipDownloaderServiceRoleE37FB908": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "LambdaGeoipDownloaderServiceRoleDefaultPolicyE7B8AE65": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "S3BucketForGeoip04B5F171",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "S3BucketForGeoip04B5F171",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "LambdaGeoipDownloaderServiceRoleDefaultPolicyE7B8AE65",
        "Roles": [
          {
            "Ref": "LambdaGeoipDownloaderServiceRoleE37FB908"
          }
        ]
      }
    },
    "LambdaGeoipDownloaderA5EFF97E": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "aes-siem-us-east-1",
          "S3Key": "siem-on-amazon-opensearch-service/v2.8.0c/assets/geoip_downloader.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "LambdaGeoipDownloaderServiceRoleE37FB908",
            "Arn"
          ]
        },
        "Architectures": [
          {
            "Fn::FindInMap": [
              "RegionMap",
              {
                "Ref": "AWS::Region"
              },
              "LambdaArch"
            ]
          }
        ],
        "Description": "SIEM on Amazon OpenSearch Service v2.8.0c / geoip-downloader",
        "Environment": {
          "Variables": {
            "license_key": {
              "Ref": "GeoLite2LicenseKey"
            },
            "s3bucket_name": {
              "Fn::Join": [
                "",
                [
                  "aes-siem-",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  "-geo"
                ]
              ]
            }
          }
        },
        "FunctionName": "aes-siem-geoip-downloader",
        "Handler": "index.lambda_handler",
        "MemorySize": 320,
        "Runtime": "python3.9",
        "Timeout": 300
      },
      "DependsOn": [
        "LambdaGeoipDownloaderServiceRoleDefaultPolicyE7B8AE65",
        "LambdaGeoipDownloaderServiceRoleE37FB908"
      ]
    },
    "LambdaGeoipDownloaderCurrentVersion7F1CD34Fd8df5588a325b3ffe091174f22c76965": {
      "Type": "AWS::Lambda::Version",
      "Properties": {
        "FunctionName": {
          "Ref": "LambdaGeoipDownloaderA5EFF97E"
        },
        "Description": "2.8.0c"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "LambdaIocPlanServiceRole6CDE7C5D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "LambdaIocPlan6E369BFB": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "aes-siem-us-east-1",
          "S3Key": "siem-on-amazon-opensearch-service/v2.8.0c/assets/ioc_database.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "LambdaIocPlanServiceRole6CDE7C5D",
            "Arn"
          ]
        },
        "Architectures": [
          {
            "Fn::FindInMap": [
              "RegionMap",
              {
                "Ref": "AWS::Region"
              },
              "LambdaArch"
            ]
          }
        ],
        "Description": "SIEM on Amazon OpenSearch Service v2.8.0c / ioc-plan",
        "Environment": {
          "Variables": {
            "ABUSE_CH": {
              "Ref": "EnableAbuseCh"
            },
            "GEOIP_BUCKET": {
              "Fn::Join": [
                "",
                [
                  "aes-siem-",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  "-geo"
                ]
              ]
            },
            "LOG_LEVEL": "WARNING",
            "OTX_API_KEY": {
              "Ref": "OtxApiKey"
            },
            "TOR": {
              "Ref": "EnableTor"
            }
          }
        },
        "FunctionName": "aes-siem-ioc-plan",
        "Handler": "lambda_function.plan",
        "MemorySize": 128,
        "Runtime": "python3.9",
        "Timeout": 300
      },
      "DependsOn": [
        "LambdaIocPlanServiceRole6CDE7C5D"
      ]
    },
    "LambdaIocPlanCurrentVersion1BAA7B4Cff00fe453ce63b38061447817cb2ae8c": {
      "Type": "AWS::Lambda::Version",
      "Properties": {
        "FunctionName": {
          "Ref": "LambdaIocPlan6E369BFB"
        },
        "Description": "2.8.0c"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "LambdaIocDownloadServiceRoleEB9001C6": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "LambdaIocDownloadServiceRoleDefaultPolicy9EDF8942": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "S3BucketForGeoip04B5F171",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "S3BucketForGeoip04B5F171",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "LambdaIocDownloadServiceRoleDefaultPolicy9EDF8942",
        "Roles": [
          {
            "Ref": "LambdaIocDownloadServiceRoleEB9001C6"
          }
        ]
      }
    },
    "LambdaIocDownload5519716E": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "aes-siem-us-east-1",
          "S3Key": "siem-on-amazon-opensearch-service/v2.8.0c/assets/ioc_database.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "LambdaIocDownloadServiceRoleEB9001C6",
            "Arn"
          ]
        },
        "Architectures": [
          {
            "Fn::FindInMap": [
              "RegionMap",
              {
                "Ref": "AWS::Region"
              },
              "LambdaArch"
            ]
          }
        ],
        "Description": "SIEM on Amazon OpenSearch Service v2.8.0c / ioc-download",
        "Environment": {
          "Variables": {
            "GEOIP_BUCKET": {
              "Fn::Join": [
                "",
                [
                  "aes-siem-",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  "-geo"
                ]
              ]
            },
            "LOG_LEVEL": "WARNING",
            "OTX_API_KEY": {
              "Ref": "OtxApiKey"
            }
          }
        },
        "FunctionName": "aes-siem-ioc-download",
        "Handler": "lambda_function.download",
        "MemorySize": 192,
        "Runtime": "python3.9",
        "Timeout": 900
      },
      "DependsOn": [
        "LambdaIocDownloadServiceRoleDefaultPolicy9EDF8942",
        "LambdaIocDownloadServiceRoleEB9001C6"
      ]
    },
    "LambdaIocDownloadCurrentVersion48773E6Bd6528b2a51b48c21308c1c8a56fd3c2d": {
      "Type": "AWS::Lambda::Version",
      "Properties": {
        "FunctionName": {
          "Ref": "LambdaIocDownload5519716E"
        },
        "Description": "2.8.0c"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "LambdaIocCreatedbServiceRole555565C0": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "LambdaIocCreatedbServiceRoleDefaultPolicyA06805A4": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "S3BucketForGeoip04B5F171",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "S3BucketForGeoip04B5F171",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "LambdaIocCreatedbServiceRoleDefaultPolicyA06805A4",
        "Roles": [
          {
            "Ref": "LambdaIocCreatedbServiceRole555565C0"
          }
        ]
      }
    },
    "LambdaIocCreatedb04F35777": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "aes-siem-us-east-1",
          "S3Key": "siem-on-amazon-opensearch-service/v2.8.0c/assets/ioc_database.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "LambdaIocCreatedbServiceRole555565C0",
            "Arn"
          ]
        },
        "Architectures": [
          {
            "Fn::FindInMap": [
              "RegionMap",
              {
                "Ref": "AWS::Region"
              },
              "LambdaArch"
            ]
          }
        ],
        "Description": "SIEM on Amazon OpenSearch Service v2.8.0c / ioc-createdb",
        "Environment": {
          "Variables": {
            "GEOIP_BUCKET": {
              "Fn::Join": [
                "",
                [
                  "aes-siem-",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  "-geo"
                ]
              ]
            },
            "LOG_LEVEL": "WARNING"
          }
        },
        "FunctionName": "aes-siem-ioc-createdb",
        "Handler": "lambda_function.createdb",
        "MemorySize": 384,
        "Runtime": "python3.9",
        "Timeout": 900
      },
      "DependsOn": [
        "LambdaIocCreatedbServiceRoleDefaultPolicyA06805A4",
        "LambdaIocCreatedbServiceRole555565C0"
      ]
    },
    "LambdaIocCreatedbCurrentVersionD9D04E9C7d7e670c19509bbe860f2f55b0309969": {
      "Type": "AWS::Lambda::Version",
      "Properties": {
        "FunctionName": {
          "Ref": "LambdaIocCreatedb04F35777"
        },
        "Description": "2.8.0c"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "IocStateMachineLogGroupC1AB417E": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/vendedlogs/states/aes-siem-ioc-logs",
        "RetentionInDays": 30
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "IocStateMachineRole095AC46F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "IocStateMachineRoleDefaultPolicy2B85C920": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "LambdaIocPlan6E369BFB",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "LambdaIocPlan6E369BFB",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "LambdaIocCreatedb04F35777",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "LambdaIocCreatedb04F35777",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "LambdaIocDownload5519716E",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "LambdaIocDownload5519716E",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "IocStateMachineRoleDefaultPolicy2B85C920",
        "Roles": [
          {
            "Ref": "IocStateMachineRole095AC46F"
          }
        ]
      }
    },
    "IocStateMachine01BE6E56": {
      "Type": "AWS::StepFunctions::StateMachine",
      "Properties": {
        "RoleArn": {
          "Fn::GetAtt": [
            "IocStateMachineRole095AC46F",
            "Arn"
          ]
        },
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{\"StartAt\":\"IocPlan\",\"States\":{\"IocPlan\":{\"Next\":\"MapDownload\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "LambdaIocPlan6E369BFB",
                  "Arn"
                ]
              },
              "\",\"Payload\":\"\"}},\"MapDownload\":{\"Type\":\"Map\",\"Next\":\"IocCreatedb\",\"Parameters\":{\"mapped.$\":\"$$.Map.Item.Value\"},\"Iterator\":{\"StartAt\":\"IocDownload\",\"States\":{\"IocDownload\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "LambdaIocDownload5519716E",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\"}}}},\"ItemsPath\":\"$.mapped\",\"MaxConcurrency\":6},\"IocCreatedb\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "LambdaIocCreatedb04F35777",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\"}}},\"TimeoutSeconds\":3600}"
            ]
          ]
        },
        "LoggingConfiguration": {
          "Destinations": [
            {
              "CloudWatchLogsLogGroup": {
                "LogGroupArn": {
                  "Fn::GetAtt": [
                    "IocStateMachineLogGroupC1AB417E",
                    "Arn"
                  ]
                }
              }
            }
          ],
          "Level": "ALL"
        },
        "StateMachineName": "aes-siem-ioc-state-machine"
      },
      "DependsOn": [
        "IocStateMachineRoleDefaultPolicy2B85C920",
        "IocStateMachineRole095AC46F"
      ]
    },
    "IocStateMachineEventsRoleC1BF1919": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "IocStateMachineEventsRoleDefaultPolicyC412ACCE": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "IocStateMachine01BE6E56"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "IocStateMachineEventsRoleDefaultPolicyC412ACCE",
        "Roles": [
          {
            "Ref": "IocStateMachineEventsRoleC1BF1919"
          }
        ]
      }
    },
    "LambdaMetricsExporterServiceRoleDDE0BD95": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "LambdaMetricsExporterServiceRoleDefaultPolicy5F0A7AC4": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KmsAesSiemLog44B26597",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "S3BucketForLog20898FE4",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "S3BucketForLog20898FE4",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "LambdaMetricsExporterServiceRoleDefaultPolicy5F0A7AC4",
        "Roles": [
          {
            "Ref": "LambdaMetricsExporterServiceRoleDDE0BD95"
          }
        ]
      }
    },
    "LambdaMetricsExporter2737F589": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "aes-siem-us-east-1",
          "S3Key": "siem-on-amazon-opensearch-service/v2.8.0c/assets/index_metrics_exporter.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "LambdaMetricsExporterServiceRoleDDE0BD95",
            "Arn"
          ]
        },
        "Architectures": [
          {
            "Fn::FindInMap": [
              "RegionMap",
              {
                "Ref": "AWS::Region"
              },
              "LambdaArch"
            ]
          }
        ],
        "Description": "SIEM on Amazon OpenSearch Service v2.8.0c / index-metrics-exporter",
        "Environment": {
          "Variables": {
            "ES_ENDPOINT": {
              "Fn::GetAtt": [
                "AesSiemDomainDeployedR2",
                "es_endpoint"
              ]
            },
            "LOG_BUCKET": {
              "Fn::Join": [
                "",
                [
                  "aes-siem-",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  "-log"
                ]
              ]
            },
            "PERIOD_HOUR": "1"
          }
        },
        "FunctionName": "aes-siem-index-metrics-exporter",
        "Handler": "index.lambda_handler",
        "MemorySize": 256,
        "Runtime": "python3.9",
        "Timeout": 300
      },
      "DependsOn": [
        "LambdaMetricsExporterServiceRoleDefaultPolicy5F0A7AC4",
        "LambdaMetricsExporterServiceRoleDDE0BD95"
      ]
    },
    "LambdaMetricsExporterCurrentVersion79B0413F0e098b32ec0d58a9c364c630e8ad7443": {
      "Type": "AWS::Lambda::Version",
      "Properties": {
        "FunctionName": {
          "Ref": "LambdaMetricsExporter2737F589"
        },
        "Description": "2.8.0c"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "LambdaDeployAES636B5079": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "aes-siem-us-east-1",
          "S3Key": "siem-on-amazon-opensearch-service/v2.8.0c/assets/deploy_es.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "AesSiemDeployRoleForLambda654D64F2",
            "Arn"
          ]
        },
        "Architectures": [
          {
            "Fn::FindInMap": [
              "RegionMap",
              {
                "Ref": "AWS::Region"
              },
              "LambdaArch"
            ]
          }
        ],
        "Description": "SIEM on Amazon OpenSearch Service v2.8.0c / opensearch domain deployment",
        "Environment": {
          "Variables": {
            "accountid": {
              "Ref": "AWS::AccountId"
            },
            "aes_admin_role": {
              "Fn::GetAtt": [
                "AesSiemDeployRoleForLambda654D64F2",
                "Arn"
              ]
            },
            "aes_domain_name": "aes-siem",
            "allow_source_address": {
              "Ref": "AllowedSourceIpAddresses"
            },
            "s3_snapshot": {
              "Ref": "S3BucketForSnapshot40E67D36"
            }
          }
        },
        "FunctionName": "aes-siem-deploy-aes",
        "Handler": "index.aes_domain_handler",
        "MemorySize": 128,
        "Runtime": "python3.8",
        "Timeout": 300
      },
      "DependsOn": [
        "AesSiemDeployRoleForLambda654D64F2"
      ]
    },
    "LambdaDeployAESCurrentVersion047915F13c96264d7f6efa2e0c9ae7ba1c40336f": {
      "Type": "AWS::Lambda::Version",
      "Properties": {
        "FunctionName": {
          "Ref": "LambdaDeployAES636B5079"
        },
        "Description": "2.8.0c"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "AesSiemDomainDeployedR2": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LambdaDeployAES636B5079",
            "Arn"
          ]
        },
        "ConfigVersion": "2.8.0c"
      },
      "DependsOn": [
        "AesSiemDeployRoleForLambda654D64F2"
      ]
    },
    "LambdaConfigureAESA0471961": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "aes-siem-us-east-1",
          "S3Key": "siem-on-amazon-opensearch-service/v2.8.0c/assets/deploy_es.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "AesSiemDeployRoleForLambda654D64F2",
            "Arn"
          ]
        },
        "Architectures": [
          {
            "Fn::FindInMap": [
              "RegionMap",
              {
                "Ref": "AWS::Region"
              },
              "LambdaArch"
            ]
          }
        ],
        "Description": "SIEM on Amazon OpenSearch Service v2.8.0c / opensearch configuration",
        "Environment": {
          "Variables": {
            "accountid": {
              "Ref": "AWS::AccountId"
            },
            "aes_admin_role": {
              "Fn::GetAtt": [
                "AesSiemDeployRoleForLambda654D64F2",
                "Arn"
              ]
            },
            "aes_domain_name": "aes-siem",
            "es_endpoint": {
              "Fn::GetAtt": [
                "AesSiemDomainDeployedR2",
                "es_endpoint"
              ]
            },
            "es_loader_role": {
              "Fn::GetAtt": [
                "LambdaEsLoaderServiceRoleFFD43869",
                "Arn"
              ]
            },
            "metrics_exporter_role": {
              "Fn::GetAtt": [
                "LambdaMetricsExporterServiceRoleDDE0BD95",
                "Arn"
              ]
            },
            "s3_snapshot": {
              "Ref": "S3BucketForSnapshot40E67D36"
            },
            "security_group_id": "sg-025de25434da4cb43",
            "vpc_subnet_id": "subnet-0bf6c00989611cdbc"
          }
        },
        "FunctionName": "aes-siem-configure-aes",
        "Handler": "index.aes_config_handler",
        "MemorySize": 128,
        "Runtime": "python3.8",
        "Timeout": 300
      },
      "DependsOn": [
        "AesSiemDeployRoleForLambda654D64F2"
      ]
    },
    "LambdaConfigureAESCurrentVersion651147686809dc95901c3a86bcc5d3e0e9c22a2c": {
      "Type": "AWS::Lambda::Version",
      "Properties": {
        "FunctionName": {
          "Ref": "LambdaConfigureAESA0471961"
        },
        "Description": "2.8.0c"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "AesSiemDomainConfiguredR2": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LambdaConfigureAESA0471961",
            "Arn"
          ]
        },
        "ConfigVersion": "2.8.0c"
      },
      "DependsOn": [
        "AesSiemDomainDeployedR2"
      ],
      "DeletionPolicy": "Retain"
    },
    "aessiempolicytoloadentriestoesE6506021": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "es:ESHttp*",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:es:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":domain/aes-siem/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "aes-siem-policy-to-load-entries-to-es",
        "Roles": [
          {
            "Ref": "LambdaEsLoaderServiceRoleFFD43869"
          },
          {
            "Ref": "AesSiemEsLoaderEC2RoleFE3F9F00"
          },
          {
            "Ref": "LambdaMetricsExporterServiceRoleDDE0BD95"
          }
        ]
      }
    },
    "aessiempolicytostopesloader4304B8FC": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:PutFunctionConcurrency",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "LambdaEsLoader4B1E2DD9",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "aes-siem-policy-to-stop-es-loader",
        "Roles": [
          {
            "Ref": "LambdaEsLoaderStopperServiceRole83AABC1A"
          }
        ]
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:PutBucketNotification",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "Roles": [
          {
            "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
          }
        ]
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Description": "AWS CloudFormation handler for \"Custom::S3BucketNotifications\" resources (@aws-cdk/aws-s3)",
        "Code": {
          "ZipFile": "import boto3  # type: ignore\nimport json\nimport logging\nimport urllib.request\n\ns3 = boto3.client(\"s3\")\n\nEVENTBRIDGE_CONFIGURATION = 'EventBridgeConfiguration'\n\nCONFIGURATION_TYPES = [\"TopicConfigurations\", \"QueueConfigurations\", \"LambdaFunctionConfigurations\"]\n\ndef handler(event: dict, context):\n  response_status = \"SUCCESS\"\n  error_message = \"\"\n  try:\n    props = event[\"ResourceProperties\"]\n    bucket = props[\"BucketName\"]\n    notification_configuration = props[\"NotificationConfiguration\"]\n    request_type = event[\"RequestType\"]\n    managed = props.get('Managed', 'true').lower() == 'true'\n    stack_id = event['StackId']\n\n    if managed:\n      config = handle_managed(request_type, notification_configuration)\n    else:\n      config = handle_unmanaged(bucket, stack_id, request_type, notification_configuration)\n\n    put_bucket_notification_configuration(bucket, config)\n  except Exception as e:\n    logging.exception(\"Failed to put bucket notification configuration\")\n    response_status = \"FAILED\"\n    error_message = f\"Error: {str(e)}. \"\n  finally:\n    submit_response(event, context, response_status, error_message)\n\ndef handle_managed(request_type, notification_configuration):\n  if request_type == 'Delete':\n    return {}\n  return notification_configuration\n\ndef handle_unmanaged(bucket, stack_id, request_type, notification_configuration):\n  external_notifications = find_external_notifications(bucket, stack_id)\n\n  if request_type == 'Delete':\n    return external_notifications\n\n  def with_id(notification):\n    notification['Id'] = f\"{stack_id}-{hash(json.dumps(notification, sort_keys=True))}\"\n    return notification\n\n  notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external = external_notifications.get(t, [])\n    incoming = [with_id(n) for n in notification_configuration.get(t, [])]\n    notifications[t] = external + incoming\n\n  if EVENTBRIDGE_CONFIGURATION in notification_configuration:\n    notifications[EVENTBRIDGE_CONFIGURATION] = notification_configuration[EVENTBRIDGE_CONFIGURATION]\n  elif EVENTBRIDGE_CONFIGURATION in external_notifications:\n    notifications[EVENTBRIDGE_CONFIGURATION] = external_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  return notifications\n\ndef find_external_notifications(bucket, stack_id):\n  existing_notifications = get_bucket_notification_configuration(bucket)\n  external_notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f\"{stack_id}-\")]\n\n  if EVENTBRIDGE_CONFIGURATION in existing_notifications:\n    external_notifications[EVENTBRIDGE_CONFIGURATION] = existing_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  return external_notifications\n\ndef get_bucket_notification_configuration(bucket):\n  return s3.get_bucket_notification_configuration(Bucket=bucket)\n\ndef put_bucket_notification_configuration(bucket, notification_configuration):\n  s3.put_bucket_notification_configuration(Bucket=bucket, NotificationConfiguration=notification_configuration)\n\ndef submit_response(event: dict, context, response_status: str, error_message: str):\n  response_body = json.dumps(\n    {\n      \"Status\": response_status,\n      \"Reason\": f\"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}\",\n      \"PhysicalResourceId\": event.get(\"PhysicalResourceId\") or event[\"LogicalResourceId\"],\n      \"StackId\": event[\"StackId\"],\n      \"RequestId\": event[\"RequestId\"],\n      \"LogicalResourceId\": event[\"LogicalResourceId\"],\n      \"NoEcho\": False,\n    }\n  ).encode(\"utf-8\")\n  headers = {\"content-type\": \"\", \"content-length\": str(len(response_body))}\n  try:\n    req = urllib.request.Request(url=event[\"ResponseURL\"], headers=headers, data=response_body, method=\"PUT\")\n    with urllib.request.urlopen(req) as response:\n      print(response.read().decode(\"utf-8\"))\n    print(\"Status code: \" + response.reason)\n  except Exception as e:\n      print(\"send(..) failed executing request.urlopen(..): \" + str(e))\n"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
            "Arn"
          ]
        },
        "Runtime": "python3.7",
        "Timeout": 300
      },
      "DependsOn": [
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
      ]
    },
    "ExecLambdaGeoipDownloader": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LambdaGeoipDownloaderA5EFF97E",
            "Arn"
          ]
        }
      },
      "DeletionPolicy": "Retain"
    },
    "EventBridgeRuleLambdaGeoipDownloaderAFA87072": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(12 hours)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "LambdaGeoipDownloaderA5EFF97E",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "EventBridgeRuleLambdaGeoipDownloaderAllowEventRuleaessiemLambdaGeoipDownloaderC2D21D002CAED82D": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaGeoipDownloaderA5EFF97E",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "EventBridgeRuleLambdaGeoipDownloaderAFA87072",
            "Arn"
          ]
        }
      }
    },
    "EventBridgeRuleStepFunctionsIoc6CE991F5": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": {
          "Fn::Join": [
            "",
            [
              "rate(",
              {
                "Ref": "IocDownloadInterval"
              },
              " minutes)"
            ]
          ]
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Ref": "IocStateMachine01BE6E56"
            },
            "Id": "Target0",
            "RoleArn": {
              "Fn::GetAtt": [
                "IocStateMachineEventsRoleC1BF1919",
                "Arn"
              ]
            }
          }
        ]
      }
    },
    "EventBridgeRuleLambdaMetricsExporterE956E7F2": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(1 hour)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "LambdaMetricsExporter2737F589",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "EventBridgeRuleLambdaMetricsExporterAllowEventRuleaessiemLambdaMetricsExporterCD618C3523DA2D6A": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaMetricsExporter2737F589",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "EventBridgeRuleLambdaMetricsExporterE956E7F2",
            "Arn"
          ]
        }
      }
    },
    "SnsTopic2C1570A4": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "AES SIEM",
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "KmsAesSiemLog44B26597",
            "Arn"
          ]
        },
        "TopicName": "aes-siem-alert"
      }
    },
    "SnsTopicTokenSubscription1D5A46B4F": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Protocol": "email",
        "TopicArn": {
          "Ref": "SnsTopic2C1570A4"
        },
        "Endpoint": {
          "Ref": "SnsEmail"
        }
      }
    },
    "TotalFreeStorageSpaceRemainsLowAlarm3888040E": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "EvaluationPeriods": 30,
        "AlarmDescription": "Triggered when total free space for the cluster remains less 200MB for 30 minutes.",
        "Dimensions": [
          {
            "Name": "ClientId",
            "Value": {
              "Ref": "AWS::AccountId"
            }
          },
          {
            "Name": "DomainName",
            "Value": "aes-siem"
          }
        ],
        "MetricName": "FreeStorageSpace",
        "Namespace": "AWS/ES",
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 200
      }
    },
    "EsLoaderStopperRule2C1D9F30": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventPattern": {
          "detail-type": [
            "CloudWatch Alarm State Change"
          ],
          "resources": [
            {
              "Fn::GetAtt": [
                "TotalFreeStorageSpaceRemainsLowAlarm3888040E",
                "Arn"
              ]
            }
          ],
          "source": [
            "aws.cloudwatch"
          ]
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "LambdaEsLoaderStopper35C1D57B",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "EsLoaderStopperRuleAllowEventRuleaessiemLambdaEsLoaderStopper325F7AA593386C47": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaEsLoaderStopper35C1D57B",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "EsLoaderStopperRule2C1D9F30",
            "Arn"
          ]
        }
      }
    },
    "SIEMDashboard35199390": {
      "Type": "AWS::CloudWatch::Dashboard",
      "Properties": {
        "DashboardBody": {
          "Fn::Join": [
            "",
            [
              "{\"widgets\":[{\"type\":\"text\",\"width\":24,\"height\":1,\"x\":0,\"y\":0,\"properties\":{\"markdown\":\"# CloudWatch Alarm\"}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":1,\"properties\":{\"view\":\"timeSeries\",\"title\":\"",
              {
                "Ref": "TotalFreeStorageSpaceRemainsLowAlarm3888040E"
              },
              "\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "TotalFreeStorageSpaceRemainsLowAlarm3888040E",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"text\",\"width\":24,\"height\":1,\"x\":0,\"y\":7,\"properties\":{\"markdown\":\"# Lambda Function: ",
              {
                "Ref": "LambdaEsLoader4B1E2DD9"
              },
              "\"}},{\"type\":\"metric\",\"width\":12,\"height\":4,\"x\":0,\"y\":8,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Error count and success rate (%)\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"",
              {
                "Ref": "LambdaEsLoader4B1E2DD9"
              },
              "\",{\"color\":\"#d13212\",\"label\":\"Errors (Count)\",\"stat\":\"Sum\",\"id\":\"errors\"}],[{\"label\":\"Success rate (%)\",\"color\":\"#2ca02c\",\"expression\":\"100 - 100 * errors / MAX([errors, invocations])\",\"yAxis\":\"right\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"",
              {
                "Ref": "LambdaEsLoader4B1E2DD9"
              },
              "\",{\"stat\":\"Sum\",\"visible\":false,\"id\":\"invocations\"}]],\"yAxis\":{\"left\":{\"showUnits\":false},\"right\":{\"max\":100,\"showUnits\":false}},\"period\":60}},{\"type\":\"metric\",\"width\":12,\"height\":4,\"x\":12,\"y\":8,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Invocations (Count)\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"",
              {
                "Ref": "LambdaEsLoader4B1E2DD9"
              },
              "\",{\"stat\":\"Sum\"}]],\"yAxis\":{\"left\":{\"showUnits\":false}},\"legend\":{\"position\":\"hidden\"},\"period\":60}},{\"type\":\"metric\",\"width\":12,\"height\":4,\"x\":0,\"y\":12,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Duration (Milliseconds)\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"",
              {
                "Ref": "LambdaEsLoader4B1E2DD9"
              },
              "\",{\"stat\":\"Minimum\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"",
              {
                "Ref": "LambdaEsLoader4B1E2DD9"
              },
              "\"],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"",
              {
                "Ref": "LambdaEsLoader4B1E2DD9"
              },
              "\",{\"stat\":\"Maximum\"}]],\"yAxis\":{\"left\":{\"showUnits\":false}},\"period\":60}},{\"type\":\"metric\",\"width\":12,\"height\":4,\"x\":12,\"y\":12,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Throttles (Count)\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"",
              {
                "Ref": "LambdaEsLoader4B1E2DD9"
              },
              "\",{\"stat\":\"Sum\"}]],\"yAxis\":{\"left\":{\"showUnits\":false}},\"legend\":{\"position\":\"hidden\"},\"period\":60}},{\"type\":\"log\",\"width\":12,\"height\":4,\"x\":0,\"y\":16,\"properties\":{\"view\":\"table\",\"title\":\"Longest 5 invocations\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"query\":\"SOURCE '/aws/lambda/",
              {
                "Ref": "LambdaEsLoader4B1E2DD9"
              },
              "' | fields @timestamp, @duration, @requestId\\n                | sort @duration desc\\n                | head 5\"}},{\"type\":\"metric\",\"width\":12,\"height\":4,\"x\":12,\"y\":16,\"properties\":{\"view\":\"timeSeries\",\"title\":\"ConcurrentExecutions (Count)\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/Lambda\",\"ConcurrentExecutions\",\"FunctionName\",\"",
              {
                "Ref": "LambdaEsLoader4B1E2DD9"
              },
              "\",{\"stat\":\"Maximum\"}]],\"yAxis\":{\"left\":{\"showUnits\":false}},\"legend\":{\"position\":\"hidden\"},\"period\":60}},{\"type\":\"text\",\"width\":24,\"height\":1,\"x\":0,\"y\":20,\"properties\":{\"markdown\":\"# OpenSearch Service: aes-siem domain\"}},{\"type\":\"metric\",\"width\":12,\"height\":4,\"x\":0,\"y\":21,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Data Node CPUUtilization (Cluster Max Percentage)\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/ES\",\"CPUUtilization\",\"ClientId\",\"",
              {
                "Ref": "AWS::AccountId"
              },
              "\",\"DomainName\",\"aes-siem\",{\"stat\":\"Maximum\"}]],\"yAxis\":{\"left\":{\"max\":100,\"showUnits\":false}},\"legend\":{\"position\":\"hidden\"}}},{\"type\":\"metric\",\"width\":12,\"height\":4,\"x\":12,\"y\":21,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Data Node JVMMemoryPressure (Cluster Max Percentage)\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/ES\",\"JVMMemoryPressure\",\"ClientId\",\"",
              {
                "Ref": "AWS::AccountId"
              },
              "\",\"DomainName\",\"aes-siem\"]],\"yAxis\":{\"left\":{\"max\":100,\"showUnits\":false}},\"legend\":{\"position\":\"hidden\"}}},{\"type\":\"metric\",\"width\":12,\"height\":4,\"x\":0,\"y\":25,\"properties\":{\"view\":\"timeSeries\",\"title\":\"HTTP requests by error response code (Cluster Total Count)\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/ES\",\"4xx\",\"ClientId\",\"",
              {
                "Ref": "AWS::AccountId"
              },
              "\",\"DomainName\",\"aes-siem\"],[\"AWS/ES\",\"5xx\",\"ClientId\",\"",
              {
                "Ref": "AWS::AccountId"
              },
              "\",\"DomainName\",\"aes-siem\"]],\"yAxis\":{\"left\":{\"showUnits\":false}}}},{\"type\":\"metric\",\"width\":12,\"height\":4,\"x\":12,\"y\":25,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Active Shards Count\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/ES\",\"Shards.active\",\"ClientId\",\"",
              {
                "Ref": "AWS::AccountId"
              },
              "\",\"DomainName\",\"aes-siem\"],[\"AWS/ES\",\"Shards.activePrimary\",\"ClientId\",\"",
              {
                "Ref": "AWS::AccountId"
              },
              "\",\"DomainName\",\"aes-siem\"]],\"yAxis\":{\"left\":{\"showUnits\":false}}}},{\"type\":\"metric\",\"width\":12,\"height\":4,\"x\":0,\"y\":29,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Cluster DiskThroughputThrottle\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/ES\",\"ThroughputThrottle\",\"ClientId\",\"",
              {
                "Ref": "AWS::AccountId"
              },
              "\",\"DomainName\",\"aes-siem\",{\"label\":\"Cluster Disk ThroughputThrottle\",\"stat\":\"Maximum\"}]],\"annotations\":{\"horizontal\":[{\"value\":1,\"yAxis\":\"left\"}]},\"yAxis\":{\"left\":{\"showUnits\":false}}}},{\"type\":\"metric\",\"width\":12,\"height\":4,\"x\":12,\"y\":29,\"properties\":{\"view\":\"timeSeries\",\"title\":\"ClusterIndexWritesBlocked (Cluster Max Count)\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/ES\",\"ClusterIndexWritesBlocked\",\"ClientId\",\"",
              {
                "Ref": "AWS::AccountId"
              },
              "\",\"DomainName\",\"aes-siem\"]],\"yAxis\":{\"left\":{\"showUnits\":false}},\"legend\":{\"position\":\"hidden\"}}},{\"type\":\"text\",\"width\":12,\"height\":1,\"x\":0,\"y\":33,\"properties\":{\"markdown\":\"# Read / Search\"}},{\"type\":\"text\",\"width\":12,\"height\":1,\"x\":12,\"y\":33,\"properties\":{\"markdown\":\"# Write / Indexing\"}},{\"type\":\"metric\",\"width\":12,\"height\":4,\"x\":0,\"y\":34,\"properties\":{\"view\":\"timeSeries\",\"title\":\"EBS Read Throughput / IOPS\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/ES\",\"ReadThroughput\",\"ClientId\",\"",
              {
                "Ref": "AWS::AccountId"
              },
              "\",\"DomainName\",\"aes-siem\",{\"label\":\"ReadThroughput (Bytes/Second)\",\"stat\":\"Maximum\"}],[\"AWS/ES\",\"ReadIOPS\",\"ClientId\",\"",
              {
                "Ref": "AWS::AccountId"
              },
              "\",\"DomainName\",\"aes-siem\",{\"label\":\"ReadIOPS (Count/Second)\",\"stat\":\"Maximum\",\"yAxis\":\"right\"}]],\"yAxis\":{\"left\":{\"showUnits\":false},\"right\":{\"showUnits\":false}}}},{\"type\":\"metric\",\"width\":12,\"height\":4,\"x\":12,\"y\":34,\"properties\":{\"view\":\"timeSeries\",\"title\":\"EBS Write Throughput / IOPS\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/ES\",\"WriteThroughput\",\"ClientId\",\"",
              {
                "Ref": "AWS::AccountId"
              },
              "\",\"DomainName\",\"aes-siem\",{\"label\":\"WriteThroughput (Bytes/Second)\",\"stat\":\"Maximum\"}],[\"AWS/ES\",\"WriteIOPS\",\"ClientId\",\"",
              {
                "Ref": "AWS::AccountId"
              },
              "\",\"DomainName\",\"aes-siem\",{\"label\":\"WriteIOPS (Count/Second)\",\"stat\":\"Maximum\",\"yAxis\":\"right\"}]],\"yAxis\":{\"left\":{\"showUnits\":false},\"right\":{\"showUnits\":false}}}},{\"type\":\"metric\",\"width\":12,\"height\":4,\"x\":0,\"y\":38,\"properties\":{\"view\":\"timeSeries\",\"title\":\"EBS Read Latency / Disk Queue\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/ES\",\"ReadLatency\",\"ClientId\",\"",
              {
                "Ref": "AWS::AccountId"
              },
              "\",\"DomainName\",\"aes-siem\",{\"label\":\"ReadLatency (Seconds)\",\"stat\":\"Maximum\"}],[\"AWS/ES\",\"DiskQueueDepth\",\"ClientId\",\"",
              {
                "Ref": "AWS::AccountId"
              },
              "\",\"DomainName\",\"aes-siem\",{\"label\":\"DiskQueueDepth (Count)\",\"stat\":\"Maximum\",\"yAxis\":\"right\"}]],\"yAxis\":{\"left\":{\"showUnits\":false},\"right\":{\"showUnits\":false}}}},{\"type\":\"metric\",\"width\":12,\"height\":4,\"x\":12,\"y\":38,\"properties\":{\"view\":\"timeSeries\",\"title\":\"EBS Write Latency / Disk Queue\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/ES\",\"WriteLatency\",\"ClientId\",\"",
              {
                "Ref": "AWS::AccountId"
              },
              "\",\"DomainName\",\"aes-siem\",{\"label\":\"WriteLatency (Seconds)\",\"stat\":\"Maximum\"}],[\"AWS/ES\",\"DiskQueueDepth\",\"ClientId\",\"",
              {
                "Ref": "AWS::AccountId"
              },
              "\",\"DomainName\",\"aes-siem\",{\"label\":\"DiskQueueDepth (Count)\",\"stat\":\"Maximum\",\"yAxis\":\"right\"}]],\"yAxis\":{\"left\":{\"showUnits\":false},\"right\":{\"showUnits\":false}}}},{\"type\":\"metric\",\"width\":12,\"height\":4,\"x\":0,\"y\":42,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Search Rate / Latency (Node Average)\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/ES\",\"SearchRate\",\"ClientId\",\"",
              {
                "Ref": "AWS::AccountId"
              },
              "\",\"DomainName\",\"aes-siem\",{\"label\":\"SearchRate (Count)\"}],[\"AWS/ES\",\"SearchLatency\",\"ClientId\",\"",
              {
                "Ref": "AWS::AccountId"
              },
              "\",\"DomainName\",\"aes-siem\",{\"label\":\"SearchLatency (Milliseconds)\",\"yAxis\":\"right\"}]],\"yAxis\":{\"left\":{\"showUnits\":false},\"right\":{\"showUnits\":false}}}},{\"type\":\"metric\",\"width\":12,\"height\":4,\"x\":12,\"y\":42,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Indexing Rate / Latency (Node Average)\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/ES\",\"IndexingRate\",\"ClientId\",\"",
              {
                "Ref": "AWS::AccountId"
              },
              "\",\"DomainName\",\"aes-siem\",{\"label\":\"IndexingRate (Count)\"}],[\"AWS/ES\",\"IndexingLatency\",\"ClientId\",\"",
              {
                "Ref": "AWS::AccountId"
              },
              "\",\"DomainName\",\"aes-siem\",{\"label\":\"IndexingLatency (Milliseconds)\",\"yAxis\":\"right\"}]],\"yAxis\":{\"left\":{\"showUnits\":false},\"right\":{\"showUnits\":false}}}},{\"type\":\"metric\",\"width\":12,\"height\":4,\"x\":0,\"y\":46,\"properties\":{\"view\":\"timeSeries\",\"title\":\"ThreadpoolReadQueue (Node Average Count)\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/ES\",\"ThreadpoolSearchQueue\",\"ClientId\",\"",
              {
                "Ref": "AWS::AccountId"
              },
              "\",\"DomainName\",\"aes-siem\"]],\"annotations\":{\"horizontal\":[{\"value\":1000,\"yAxis\":\"left\"}]},\"yAxis\":{\"left\":{\"showUnits\":false}},\"legend\":{\"position\":\"hidden\"}}},{\"type\":\"metric\",\"width\":12,\"height\":4,\"x\":12,\"y\":46,\"properties\":{\"view\":\"timeSeries\",\"title\":\"ThreadpoolWriteQueue (Node Average Count)\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/ES\",\"ThreadpoolWriteQueue\",\"ClientId\",\"",
              {
                "Ref": "AWS::AccountId"
              },
              "\",\"DomainName\",\"aes-siem\"]],\"annotations\":{\"horizontal\":[{\"value\":10000,\"yAxis\":\"left\"}]},\"yAxis\":{\"left\":{\"showUnits\":false}},\"legend\":{\"position\":\"hidden\"}}},{\"type\":\"metric\",\"width\":12,\"height\":4,\"x\":0,\"y\":50,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Threadpool Search Rejected Count (Node Total Count)\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/ES\",\"ThreadpoolSearchRejected\",\"ClientId\",\"",
              {
                "Ref": "AWS::AccountId"
              },
              "\",\"DomainName\",\"aes-siem\",{\"stat\":\"Sum\"}]],\"yAxis\":{\"left\":{\"showUnits\":false}}}},{\"type\":\"metric\",\"width\":12,\"height\":4,\"x\":12,\"y\":50,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Threadpool Indexing Rejected Count (Node Total Count)\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/ES\",\"ThreadpoolWriteRejected\",\"ClientId\",\"",
              {
                "Ref": "AWS::AccountId"
              },
              "\",\"DomainName\",\"aes-siem\",{\"stat\":\"Sum\"}],[\"AWS/ES\",\"CoordinatingWriteRejected\",\"ClientId\",\"",
              {
                "Ref": "AWS::AccountId"
              },
              "\",\"DomainName\",\"aes-siem\",{\"stat\":\"Sum\"}],[\"AWS/ES\",\"PrimaryWriteRejected\",\"ClientId\",\"",
              {
                "Ref": "AWS::AccountId"
              },
              "\",\"DomainName\",\"aes-siem\",{\"stat\":\"Sum\"}],[\"AWS/ES\",\"ReplicaWriteRejected\",\"ClientId\",\"",
              {
                "Ref": "AWS::AccountId"
              },
              "\",\"DomainName\",\"aes-siem\",{\"stat\":\"Sum\"}]],\"yAxis\":{\"left\":{\"showUnits\":false}}}},{\"type\":\"text\",\"width\":24,\"height\":1,\"x\":0,\"y\":54,\"properties\":{\"markdown\":\"# SQS\"}},{\"type\":\"metric\",\"width\":12,\"height\":4,\"x\":0,\"y\":55,\"properties\":{\"view\":\"timeSeries\",\"title\":\"",
              {
                "Fn::GetAtt": [
                  "AesSiemSqsSplitLogs0191F431",
                  "QueueName"
                ]
              },
              ": NumberOfMessagesReceived (Count)\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/SQS\",\"NumberOfMessagesReceived\",\"QueueName\",\"",
              {
                "Fn::GetAtt": [
                  "AesSiemSqsSplitLogs0191F431",
                  "QueueName"
                ]
              },
              "\",{\"stat\":\"Sum\"}]],\"yAxis\":{\"left\":{\"showUnits\":false}},\"legend\":{\"position\":\"hidden\"}}},{\"type\":\"metric\",\"width\":12,\"height\":4,\"x\":12,\"y\":55,\"properties\":{\"view\":\"timeSeries\",\"title\":\"",
              {
                "Fn::GetAtt": [
                  "AesSiemDlq1CD8439D",
                  "QueueName"
                ]
              },
              ": ApproximateNumberOfMessagesVisible (Count)\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/SQS\",\"ApproximateNumberOfMessagesVisible\",\"QueueName\",\"",
              {
                "Fn::GetAtt": [
                  "AesSiemDlq1CD8439D",
                  "QueueName"
                ]
              },
              "\",{\"stat\":\"Maximum\"}]],\"yAxis\":{\"left\":{\"showUnits\":false}},\"legend\":{\"position\":\"hidden\"}}},{\"type\":\"text\",\"width\":24,\"height\":1,\"x\":0,\"y\":59,\"properties\":{\"markdown\":\"# Lambda Function Logs: ",
              {
                "Ref": "LambdaEsLoader4B1E2DD9"
              },
              "\"}},{\"type\":\"log\",\"width\":24,\"height\":6,\"x\":0,\"y\":60,\"properties\":{\"view\":\"table\",\"title\":\"CRITICAL Logs\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"query\":\"SOURCE '/aws/lambda/",
              {
                "Ref": "LambdaEsLoader4B1E2DD9"
              },
              "' | fields @timestamp, message, s3_key\\n                | filter level == \\\"CRITICAL\\\"\\n                | sort @timestamp desc\\n                | limit 100\"}},{\"type\":\"log\",\"width\":24,\"height\":6,\"x\":0,\"y\":66,\"properties\":{\"view\":\"table\",\"title\":\"ERROR Logs\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"query\":\"SOURCE '/aws/lambda/",
              {
                "Ref": "LambdaEsLoader4B1E2DD9"
              },
              "' | fields @timestamp, message, s3_key\\n                | filter level == \\\"ERROR\\\"\\n                | sort @timestamp desc\\n                | limit 100\"}},{\"type\":\"text\",\"width\":12,\"height\":3,\"x\":0,\"y\":72,\"properties\":{\"markdown\":\"## Sample query\\nTo investigate critical/error log with CloudWatch Logs Insights\\n\\n```\\nfields @timestamp, @message\\n| filter s3_key == \\\"copy s3_key and paste here\\\"\\nOR @requestId == \\\"copy function_request_id and paste here\\\"```\"}},{\"type\":\"log\",\"width\":24,\"height\":6,\"x\":0,\"y\":75,\"properties\":{\"view\":\"table\",\"title\":\"Exception Logs\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"query\":\"SOURCE '/aws/lambda/",
              {
                "Ref": "LambdaEsLoader4B1E2DD9"
              },
              "' | fields @timestamp, @message\\n                | filter @message =~ /^\\\\[ERROR]/\\n                | filter @message not like /No active exception to reraise/\\n                # exclude raise without Exception\\n                | sort @timestamp desc\\n                | limit 100\"}}]}"
            ]
          ]
        },
        "DashboardName": "SIEM"
      }
    }
  },
  "Outputs": {
    "RoleDeploy": {
      "Value": {
        "Fn::GetAtt": [
          "AesSiemDeployRoleForLambda654D64F2",
          "Arn"
        ]
      },
      "Export": {
        "Name": "role-deploy"
      }
    },
    "DashboardsUrl": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Fn::GetAtt": [
                "AesSiemDomainDeployedR2",
                "es_endpoint"
              ]
            },
            "/_dashboards/"
          ]
        ]
      },
      "Export": {
        "Name": "dashboards-url"
      }
    },
    "DashboardsPassword": {
      "Description": "Please change the password in OpenSearch Dashboards ASAP",
      "Value": {
        "Fn::GetAtt": [
          "AesSiemDomainDeployedR2",
          "kibanapass"
        ]
      },
      "Export": {
        "Name": "dashboards-pass"
      }
    },
    "DashboardsAdminID": {
      "Value": {
        "Fn::GetAtt": [
          "AesSiemDomainDeployedR2",
          "kibanaadmin"
        ]
      },
      "Export": {
        "Name": "dashboards-admin"
      }
    }
  }
}